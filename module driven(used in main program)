module driven
    implicit none
    real(8),allocatable :: position(:,:)!atom_total_num×3的二维矩阵，用来装原子的坐标
    real(8),allocatable :: distance(:,:)!atom_total_num×atom_total_num+1的二维矩阵，前atom_total_num×atom_total_num的空间用来装原子之间的距离，最后第atom_total_num+1列用于判断原子的成键数
    real(8),allocatable :: bonds(:,:)!atom_total_num×atom_total_num+1的二维矩阵，前atom_total_num×atom_total_num的空间用来记录原子间成键关系，最后第atom_total_num+1列用于判断原子的成键数
    integer :: atom_total_num! total atom number
    integer :: atom_carbon_num!total carbon atom number 
    integer :: bonds_carbon_num!the number of carbon carbon bonds number for each carbon atom
    
    
    contains
    subroutine readfile(file_name) 
    character(40):: file_name
    integer :: i
    integer :: j
    integer :: number_of_read
    real(8) :: x!xyz分别是一个原子的xyz坐标
    real(8) :: y
    real(8) :: z
    character :: atom_type
    integer,parameter :: filed = 10
    integer :: status = 0!判断文件是否读取到结尾，读取到结尾stuatu<0
    logical :: alive!判断文件是否存在
    atom_carbon_num = 0
    atom_total_num = 0
    number_of_read = 0
    !***************************************************************************文件读取与position矩阵的创建
     inquire(file = file_name,exist = alive)
     if(alive) then
       open(unit = filed,file = file_name,status = "old",action = "read")
       read(filed,*)atom_total_num
       allocate(position(atom_total_num,3))
       allocate(distance(atom_total_num,atom_total_num + 1))
       allocate(bonds(atom_total_num,atom_total_num + 1))
       do while(.true.)
           read(filed,*,iostat = status)atom_type,x,y,z
           if(status<0) exit
           number_of_read = number_of_read +1
           if (atom_type =="C") then
               atom_carbon_num = atom_carbon_num + 1
               end if
               position(number_of_read,1) = x
               position(number_of_read,2) = y
               position(number_of_read,3) = z          
       end do      
   else
       write(*,*)"file doesn't exist, please check"
       pause
       stop
   end if
   !将distance与bonds矩阵赋值为-1
  distance = -1
  bonds = -1 
  do i = 1,atom_total_num
      do j = 1, atom_total_num
          distance(i,j) = ((position(i,1)-position(j,1))**2 + (position(i,2)-position(j,2))**2 + (position(i,3)-position(j,3))**2)**0.5        
      end do
  end do
   !**********************************************************创建bonds
 do i = 1,atom_total_num
      do j = 1, atom_total_num
          if(abs( distance(i,j) - 1.526 < 0.1) .or. abs( distance(i,j) - 1.090 < 0.1  )) then
          bonds(i,j) = distance(i,j)
          end if           
      end do
 end do
  !**********************************************************记录carbon carbon bond number
 do i = 1,atom_carbon_num
        bonds_carbon_num = 0
     do j = 1,atom_carbon_num
         if( bonds(i,j) >1.3) then
             bonds_carbon_num = bonds_carbon_num +1
             !write(*,*) "bonds_carbon_num",bonds_carbon_num
         end if
     end do
     bonds(i,atom_total_num+1) = bonds_carbon_num 
 end do
   end subroutine readfile    
end module driven
